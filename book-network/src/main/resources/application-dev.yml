# this will extend all the properties from the application.yml file and override what is needed

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://localhost:5432/book_social_network # PostgreSQL 데이터베이스 연결 URL
    username: postgres # 데이터베이스 접속 사용자명
    password: postgres # 데이터베이스 접속 비밀번호
    driver-class-name: org.postgresql.Driver # PostgreSQL JDBC 드라이버 클래스
  jpa:
    hibernate:
      ddl-auto: update # update the schema when the application starts
    show-sql: true # show the SQL queries in the console
    properties:
      hibernate:
        format_sql: true # format the SQL queries
    database: postgresql # 사용할 데이터베이스 종류 지정
    database-platform: org.hibernate.dialect.PostgreSQLDialect # 하이버네이트에서 사용할 데이터베이스 방언
  # Redis 설정 추가
  data:
    redis:
      host: localhost  # Docker Compose에서 설정한 Redis 호스트
      port: 6379       # Docker Compose에서 설정한 Redis 포트
  # 캐시 설정 추가
  cache:
    type: redis        # 캐시 타입을 Redis로 명시적 지정
    redis:
      time-to-live: 600000  # 기본 캐시 만료 시간 (밀리초, 여기서는 10분)
  mail:
    host: localhost # maildev container. In production, change host, port, username, and password
    port: 1025 # SMTP 서버 포트
    username: ali # SMTP 인증 사용자명
    password: ali # SMTP 인증 비밀번호
    properties:
      mail:
        smtp:
          trust: "*" # not recommended for production
        auth: true # SMTP 인증 활성화
        starttls:
          enabled: true # TLS 보안 연결 활성화
        connectiontimeout: 5000 # 연결 타임아웃 (밀리초)
        timeout: 3000 # 3 seconds
        writetimeout: 5000 # 쓰기 타임아웃 (밀리초)

application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970 # JWT 토큰 서명에 사용되는 비밀 키
      expiration: 86400000 # 1 day
  mailing:
    frontend:
      activation-url: http://localhost:4200/activate-account # 계정 활성화를 위한 프론트엔드 URL
  file:
    upload:
      photos-output-path: ./uploads # 업로드된 사진 파일이 저장될 경로
server:
  port: 8080 # 애플리케이션이 실행될 HTTP 포트

# Redis 로깅 설정 추가 (선택 사항)
logging:
  level:
    org.springframework.data.redis: DEBUG
    org.springframework.cache: TRACE